{"version":3,"sources":["components/AddTodo/AddTodo.module.css","components/Search/Search.module.css","components/TodoApp/MainContent.module.css","components/TodoList/TodoList.module.css","components/ToDo/ToDo.jsx","components/redux/actions/actions.jsx","components/redux/action-types.jsx","components/TodoList/TodoList.jsx","components/AddTodo/AddTodo.jsx","components/FilterButton/FilterButton.jsx","components/FilterButtons/FilterButtons.jsx","components/Search/Search.jsx","components/TodoApp/TodoApp.jsx","components/redux/reducers/reducer.jsx","components/redux/store/store.jsx","index.js","components/FilterButtons/FilterButtons.module.css"],"names":["module","exports","mapDispatchToProps","changeCompleted","payload","type","id","deleteTodo","connect","completedStyle","todoId","todoContent","className","key","styles","checkCompleted","onChange","checked","completed","deleteToDo","onClick","state","todos","currentButton","searchText","listOfTodo","map","todo","toDo","content","listOfCompleted","filter","props","listOfUncompleted","listWillDisplay","listWillDisplayWithSearch","toLowerCase","includes","list","addTodo","text","useState","todoText","setTodoText","onSubmit","e","preventDefault","addInput","placeholder","target","value","changeFilter","chosen","variety","filterButtonChosen","filterButton","searchByText","setText","useEffect","searchInput","TodoApp","mainContent","initialState","number","rootReducer","action","Math","random","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5c4a5f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addInput\":\"AddTodo_addInput__22T9H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"Search_searchInput__38AL6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContent\":\"MainContent_mainContent__2tQUg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TodoList_list__3ugOp\",\"toDo\":\"TodoList_toDo__tr94p\",\"completed\":\"TodoList_completed__22fMM TodoList_toDo__tr94p\",\"deleteToDo\":\"TodoList_deleteToDo__2YoQX\"};","import React from \"react\";\nimport styles from \"../TodoList/TodoList.module.css\";\nimport { connect } from \"react-redux\";\nimport { changeCompleted } from \"../redux/actions/actions\";\nimport { deleteTodo } from \"../redux/actions/actions\";\n\nexport const ToDo = ({\n  completedStyle,\n  todoId,\n  todoContent,\n  changeCompleted,\n  deleteTodo,\n}) => {\n  return (\n    <li className={completedStyle} key={todoId}>\n      <input\n        className={styles.checkCompleted}\n        type='checkbox'\n        onChange={() => changeCompleted(todoId)}\n        checked={completedStyle === styles.completed ? true : false}\n      />\n      {todoContent}\n      <button className={styles.deleteToDo} onClick={() => deleteTodo(todoId)}>\n        X\n      </button>\n    </li>\n  );\n};\n\nconst mapDispatchToProps = {\n  changeCompleted,\n  deleteTodo,\n};\n\nexport default connect(null, mapDispatchToProps)(ToDo);\n","import { DELETE_TODO } from \"../action-types\";\nimport { CHANGE_COMPLETED } from \"../action-types\";\nimport { ADD_TODO } from \"../action-types\";\nimport { CHANGE_FILTER } from \"../action-types\";\nimport { SEARCH_BY_TEXT } from \"../action-types\";\nexport const addTodo = (payload) => {\n  return { type: ADD_TODO, text: payload };\n};\nexport const deleteTodo = (payload) => {\n  return { type: DELETE_TODO, id: payload };\n};\nexport const changeCompleted = (payload) => {\n  return { type: CHANGE_COMPLETED, id: payload };\n};\nexport const changeFilter = (payload) => {\n  return { type: CHANGE_FILTER, filter: payload };\n};\nexport const searchByText = (payload) => ({\n  type: SEARCH_BY_TEXT,\n  text: payload,\n});\n","export const DELETE_TODO = \"DELETE_TODO\";\nexport const CHANGE_COMPLETED = \"CHANGE_COMPLETED\";\nexport const ADD_TODO = \"ADD_TODO\";\nexport const CHANGE_FILTER = \"CHANGE_FILTER\";\nexport const SEARCH_BY_TEXT = \"SEARCH_BY_TEXT\";\n","import React from \"react\";\nimport ToDo from \"../ToDo/ToDo\";\nimport styles from \"./TodoList.module.css\";\nimport { connect } from \"react-redux\";\n\nexport const TodoList = ({ todos, currentButton, searchText }) => {\n  const listOfTodo = todos.map((todo) => {\n    return (\n      <ToDo\n        key={todo.id}\n        completedStyle={todo.completed ? styles.completed : styles.toDo}\n        todoId={todo.id}\n        todoContent={todo.content}\n      />\n    );\n  });\n  const listOfCompleted = listOfTodo.filter(\n    (todo) => todo.props.completedStyle === styles.completed\n  );\n  const listOfUncompleted = listOfTodo.filter(\n    (todo) => todo.props.completedStyle === styles.toDo\n  );\n  const listWillDisplay =\n    currentButton === \"all\"\n      ? listOfTodo\n      : currentButton === \"completed\"\n      ? listOfCompleted\n      : listOfUncompleted;\n  const listWillDisplayWithSearch = listWillDisplay.filter((todo) =>\n    todo.props.todoContent.toLowerCase().includes(searchText.toLowerCase())\n  );\n  return (\n    <ul className={styles.list}>\n      {searchText ? listWillDisplayWithSearch : listWillDisplay}\n    </ul>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  todos: state.todos,\n  currentButton: state.currentButton,\n  searchText: state.searchText,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n","import React, { useState } from \"react\";\nimport styles from \"./AddTodo.module.css\";\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"../redux/actions/actions\";\n\nexport const AddTodo = ({ addTodo }) => {\n  const [todoText, setTodoText] = useState(\"\");\n  const handleChange = (e) => {\n    setTodoText(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addTodo(todoText);\n    setTodoText(\"\");\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        className={styles.addInput}\n        type='text'\n        placeholder='What need to do?'\n        onChange={handleChange}\n        value={todoText}\n      />\n    </form>\n  );\n};\n\nconst mapDispatchToProps = {\n  addTodo,\n};\n\nexport default connect(null, mapDispatchToProps)(AddTodo);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeFilter } from \"../redux/actions/actions\";\n\nexport const FilterButton = ({ chosen, variety, changeFilter }) => {\n  return (\n    <button onClick={() => changeFilter(variety)} className={chosen}>\n      {variety}\n    </button>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {\n  changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterButton);\n","import React from \"react\";\nimport styles from \"./FilterButtons.module.css\";\nimport FilterButton from \"../FilterButton/FilterButton\";\nimport { connect } from \"react-redux\";\n\nexport const FilterButtons = ({ currentButton }) => {\n  return (\n    <div>\n      <FilterButton\n        chosen={\n          currentButton === \"all\"\n            ? styles.filterButtonChosen\n            : styles.filterButton\n        }\n        variety='All'\n      />\n      <FilterButton\n        chosen={\n          currentButton === \"completed\"\n            ? styles.filterButtonChosen\n            : styles.filterButton\n        }\n        variety='Completed'\n      />\n      <FilterButton\n        chosen={\n          currentButton === \"uncompleted\"\n            ? styles.filterButtonChosen\n            : styles.filterButton\n        }\n        variety='Uncompleted'\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  currentButton: state.currentButton,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterButtons);\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./Search.module.css\";\nimport { connect } from \"react-redux\";\nimport { searchByText } from \"../redux/actions/actions\";\n\nexport const Search = ({ searchByText }) => {\n  const [text, setText] = useState(\"\");\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n  useEffect(() => {\n    searchByText(text);\n  }, [text]);\n  return (\n    <>\n      <input\n        className={styles.searchInput}\n        type='search'\n        onChange={handleChange}\n        value={text}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = {\n  searchByText,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React from \"react\";\nimport \"../TodoList/TodoList\";\nimport TodoList from \"../TodoList/TodoList\";\nimport AddTodo from \"../AddTodo/AddTodo\";\nimport FilterButtons from \"../FilterButtons/FilterButtons\";\nimport Search from \"../Search/Search\";\nimport styles from \"./MainContent.module.css\";\n\nconst TodoApp = () => {\n  return (\n    <div className={styles.mainContent}>\n      <Search />\n      <FilterButtons />\n      <TodoList />\n      <AddTodo />\n    </div>\n  );\n};\n\nexport default TodoApp;\n","import {\n  DELETE_TODO,\n  ADD_TODO,\n  CHANGE_COMPLETED,\n  CHANGE_FILTER,\n  SEARCH_BY_TEXT,\n} from \"../action-types\";\nconst initialState = {\n  todos: [],\n  currentButton: \"all\",\n  searchText: \"\",\n  number: 0,\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        todos: [\n          ...state.todos,\n          { content: action.text, id: Math.random(), completed: false },\n        ],\n      };\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== action.id),\n      };\n    case CHANGE_COMPLETED:\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          if (todo.id === action.id) {\n            if (todo.completed) return { ...todo, completed: false };\n            else return { ...todo, completed: true };\n          } else {\n            return { ...todo };\n          }\n        }),\n      };\n    case CHANGE_FILTER:\n      return {\n        ...state,\n        currentButton: action.filter.toLowerCase(),\n      };\n    case SEARCH_BY_TEXT:\n      return {\n        ...state,\n        searchText: action.text.toLowerCase(),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/reducer\";\nexport const store = createStore(rootReducer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport TodoApp from \"./components/TodoApp/TodoApp\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./components/redux/store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <TodoApp />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterButton\":\"FilterButtons_filterButton__v6mFZ\",\"filterButtonChosen\":\"FilterButtons_filterButtonChosen__EDQx4 FilterButtons_filterButton__v6mFZ\"};"],"sourceRoot":""}